{"version":3,"sources":["app/Pages/home.js","app/Pages/HTML.js","app/Pages/CSS.js","app/Pages/Tooling.js","app/App.js","serviceWorker.js","index.js"],"names":["HomePage","className","React","Component","HTMLPage","href","rel","target","pDemoStyles","color","fontWeight","fontSize","CSSPage","style","ToolingPage","App","id","pageWrapId","outerContainerId","width","exact","activeClassName","to","path","HTML","CSS","Tooling","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd9f5336.chunk.js","sourcesContent":["import React from 'react';\n\nclass HomePage extends React.Component {\n    render() {\n        return (\n            <div className=\"init-component-row\">\n                <div className=\"col\">\n                    <div className=\"row text-left\">\n                        <div className=\"special-heading\">\n                            <h2>Html introduction</h2>\n                        </div>\n                        <div className=\"col\">\n                            <p className=\"pt-3\">\n                                HTML is the standard markup language for web pages and web applications. With HTML we create the scaffolding of a web page.\n                            </p>\n                            <ul>\n                                <li>HTML stand for Hyper Text Markup Language</li>\n                                <li>HTML describes the structure of a Web Page/Web Application</li>\n                                <li>HTML consists of a series of elements</li>\n                                <li>HTML elements tell the browser how to display the content</li>\n                                <li>HTML elements are represented by tags</li>\n                                <li>HTML tags label pieces of content such as \"heading\", \"paragraph\", \"table\", and so on</li>\n                                <li>Browsers do not display the HTML tags, but use them to render the content of the page</li>\n                            </ul>\n                        </div>\n                        <div className=\"col\">\n                            <pre><code>{`\n                                <!DOCTYPE html>\n                                <html>\n                                    <head>\n                                    <title>Page Title</title>\n                                    </head>\n                                    <body>\n                                    \n                                    <h1>My First Heading</h1>\n                                    <p>My first paragraph.</p>\n                                    \n                                    </body>\n                                </html>`\n                            }</code></pre>\n                        </div>\n                    </div>\n                    <div className=\"row text-left my-5\">\n                        <div className=\"special-heading\">\n                            <h2>CSS introduction</h2>\n                        </div>\n                        <div className=\"col\">\n                            <p className=\"pt-3\">\n                                HTML is a language that describes the style of an HTML document. CSS describes how HTMl elements should be displayed.\n                            </p>\n                            <ul>\n                                <li>CSS stands for Cascading Style Sheets</li>\n                                <li>CSS describes how HTML elements are to be displayed on screen, paper, or in other media</li>\n                                <li>CSS saves a lot of work. It can control the layout of multiple web pages all at once</li>\n                                <li>External stylesheets are stored in CSS files</li>\n                            </ul>\n                        </div>\n                        <div className=\"col\">\n                            <pre><code>{`\n                                p {\n                                    color: red;\n                                    text-align: center;\n                                }\n\n                                .center {\n                                    text-align: center;\n                                    color: red;\n                                }\n                                \n                                `\n                            }</code></pre>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\n\nclass HTMLPage extends React.Component {\n    render() {\n        return (\n            <div className=\"init-component-row\">\n                <div className=\"col\">\n                    <div className=\"row text-left\">\n                        <div className=\"special-heading\">\n                            <h2>Html iCan Usage</h2>\n                        </div>\n                        <div className=\"col\">\n                            <p className=\"pt-3\">\n                                Within the realm of the iCan we use HTML to build out custom Web Parts that are then displayed throughout the front end of the\n                                iCan website. Each Web part zone will consist of a webpart that is developed with HTML and styled through the CSS master style\n                                sheet. Each Web Part can be edited by:\n                                <ol className=\"mt-3\">\n                                    <li>Clicking the sharepoint Gear in the header and selecting \"Edit Page.\"</li>\n                                    <li>Once insid eth page editor click on the Web Part you wish to edit.</li>\n                                    <li>A new menu bar will show up allowing you to \"Edit Souce\" of the website:\n                                        <ul>\n                                            <li>Format Text -> Edit Source</li>\n                                        </ul>\n                                    </li>\n                                    <li>Upon clicking \"Edit Source\" a modal will popup with the source code for the said web part.\n                                        <ul>\n                                            <li>Within this HTMl code you can Add/Remove/Update many aspects of the selected web part.</li>\n                                            <li>Note: Within here you will see a lot of HTML code that should never be changed.</li>\n                                        </ul>\n                                    </li>\n                                </ol>\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row text-left my-5\">\n                        <div className=\"special-heading\">\n                            <h2>Common iCan HTML Tags</h2>\n                        </div>\n                        <div className=\"col\">\n                            <p className=\"pt-3\">\n                                \"Tags\" are used throughout every single website/web application. Tags are used to identify and/or organize your front end code.\n                                I like to think of HTMl tags as the Scaffolding of a building. If your building a new skyscraper the first step, next to the foundation,\n                                would be \"outlining\" the building with steel beams, which are our HTML tags. Most HTML tags must have an opening tag <code>{'<p>'}</code> and a closing tag <code>{'</p>'}</code>.\n                                All tags within an open and closing tag will inherit the parents styling.\n\n                            </p>\n                            <hr />\n                            <p>The <code>{'<div></div>'}</code> tag: defines a division or a section in an HTML document. Often used as a container for other HTML elements to style them with CSS or to perform certain tasks with JavaScript.</p>\n                            <p className=\"pt-3\">The <code>{'<span></span>'}</code> tag: Used to group inline-elements in a document. Provides a way to add a hook to a part of a text or a part of a document.</p>\n                            <p className=\"pt-3\">The <code>{'<p></p>'}</code> tag: Known as the Paragraph tag. Defines a paragraph on the page.</p>\n                            <p className=\"pt-3\">The <code>{'<h1-6></h*>'}</code> tag: Used to define HTML headings. <code>{'<h1>'}</code> defines the most important heading. <code>{'<h6>'}</code> defines the least important heading.</p>\n                            <p className=\"pt-3\">The <code>{'<i></i>'}</code> tag: Used to display a <a href=\"https://fontawesome.com/\" rel=\"noopener noreferrer\" target=\"_blank\">FontAwesome</a> icon.</p>\n                            <p className=\"pt-3\">The <code>{'<a></a>'}</code> tag: Known as the anchor tag. Used to \"link\" to a another page on the website or an external page/website. Can also be used to \"anchor\" to a section on a page.</p>\n                            <p className=\"pt-3\">The <code>{'<strong></strong>'}</code> tag: Used to \"bold\" a collection of text.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HTMLPage;","import React from 'react';\n\nlet pDemoStyles = {\n    color: '#ff4c00',\n    fontWeight: '900',\n    fontSize: '16px'\n}\nclass CSSPage extends React.Component {\n    render() {\n        return (\n            <div className=\"init-component-row\">\n                <div className=\"col\">\n                    <div className=\"row text-left\">\n                        <div className=\"special-heading\">\n                            <h2>CSS iCan Usage</h2>\n                        </div>\n                        <div className=\"col\">\n                            <p className=\"pt-3\">\n                                Within the realm of the iCan we use CSS style custom Web Parts that are then displayed throughout the front end of the\n                                iCan website. Each Web part zone will consist of a webpart that is developed with HTML and styled through the CSS master style\n                                sheet. Each Web Part can be edited by:\n                                <ol className=\"mt-3\">\n                                    <li>Clicking the sharepoint Gear in the header and selecting \"Edit Page.\"</li>\n                                    <li>Once insid eth page editor click on the Web Part you wish to edit.</li>\n                                    <li>A new menu bar will show up allowing you to \"Edit Souce\" of the website:\n                                        <ul>\n                                            <li>Format Text -> Edit Source</li>\n                                        </ul>\n                                    </li>\n                                    <li>Upon clicking \"Edit Source\" a modal will popup with the source code for the said web part.\n                                        <ul>\n                                            <li>Within this HTMl code you can Add/Remove/Update many aspects of the selected web part.</li>\n                                            <li>Note: Within here you will see a lot of HTML code that should never be changed.</li>\n                                        </ul>\n                                    </li>\n                                </ol>\n                            </p>\n                            <p className=\"pt-3\">\n                                Styling can be applied to any element within the HTML code through the use of the \"style\" attribute on the desired\n                                HTML tag. We must always be mindful of how a style may interact with all other element of the page. \n                            </p>\n                            <p className=\"pt-3\">\n                                Throughout the iCan many css styling is done through the use of \"classes.\" We want to maintain this practice moving forward\n                                as is creates resuability throughout the iCan. \n                            </p>\n                        </div>\n                   </div>\n                   <div className=\"row text-left\">\n                        <div className=\"col\">\n                            <hr />\n                            <p className=\"pt-3\">\n                                CSS styles is used throughout every single website/web application. Styles are used to create the look of a website/web application. \n                                Think of CSS as all the walls and infrastructure of a building. We cna have different carpet colors, walls painted different colors, and even different\n                                bathroom amenaties throughout the building. \n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row text-left\">\n                        <div className=\"col\">\n                            <p className=\"pt-3\">\n                                Classes are used to styling an element allowing for reusability throughout a website/web application. \n                                Instead of having to write the same style for every <code>{'<p>'}</code> tag we would add all the \n                                styles to a class and then assign that class to any element we want to inherit those styles. <span style={pDemoStyles} >Hello World!</span>\n                            </p>\n                            <p className=\"pt-3\">\n                                An element can have multiple classes, when this happens the element will receive all the styles associated with every class.\n                            </p>\n                        </div>\n                        <div className=\"col\">\n                            <pre><code>{`\n                                <p class=\"color-orange font-bold\">Hello World!</p>\n\n                                p {\n                                    font-size: 16px;\n                                }\n                                .color-orange {\n                                    color: #ff4c00;\n                                }\n                                .font-bold {\n                                    font-weight: 900;\n                                }\n                                `\n                            }</code></pre>\n                        </div>\n                        <hr />\n                    </div>\n                    <div className=\"row text-left\">\n                        <div className=\"special-heading\">\n                            <h2>Common iCan CSS Classes</h2>\n                        </div>\n                        <div className=\"col\">\n                            <p className=\"pt-3\">\n                                There are 100's of classes used through the iCan that add custom styling to all the iCan webparts. We use these classes to\n                                arrange different elements within webparts along with add coloring to text and even the background color of a section within\n                                a webpart.\n                            </p>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row text-left\">\n                        <div className=\"col\">\n                            <ul>\n                                <li>background-orange</li>\n                                <li>background-lightgrey</li>\n                                <li>background-white</li>\n                                <li>background-green</li>\n                                <li>background-blue</li>\n                                <li>background-grey</li>\n                                <li>background-transparent</li>\n                                <li>color-white</li>\n                                <li>color-grey</li>\n                                <li>color-orange</li>\n                                <li>color-blue</li>\n                                <li>color-green</li>\n                                <li>color-red</li>\n                            </ul>\n                        </div>\n                        <div className=\"col\">\n                            <pre><code>{`\n                                .background-orange {\n                                    background-color: #ff4c00;\n                                }\n                                .background-grey {\n                                    background-color: #6E6259;\n                                }\n                                .background-white {\n                                    background-color: #ffffff;\n                                }\n                                .color-blue {\n                                    color: #00B3E3;\n                                }\n                                .color-green {\n                                    color: #00bf6f;\n                                }\n                                .color-orange {\n                                    color: #ff4c00;\n                                }\n                                `\n                            }</code></pre>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CSSPage;","import React from 'react';\n\nclass ToolingPage extends React.Component {\n    render() {\n        return (\n            <div className=\"init-component-row\">\n                <div className=\"col\">\n                    <div className=\"row text-left\">\n                        <div className=\"special-heading\">\n                            <h2>Web Dev Tooling</h2>\n                        </div>\n                        <div className=\"col\">\n                            <p className=\"pt-3\">\n                                Web development tools allow developers to work with a variety of web technologies, \n                                including HTML, CSS, the DOM, JavaScript, and other components that are handled by \n                                the web browser.\n                            </p>\n                            <p className=\"pt-3\">\n                                In regards to the iCan we use tooling to help us edit webaprts without corrupting the code. \n                                This can happen by accidently deleting an extra closing tag or by moving a group of code\n                                to the wrong place.\n                            </p>\n                            <hr />\n                            <p className=\"pt-3\">\n                            <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Visual Studio Code</strong></a>: Used to edit code blocks with ease.\n                            </p>\n                            <p className=\"pt-3\">\n                                <strong>Google Chrome Dev tools</strong>: Used to inspect a webpage and gain some insight into what is going on with the page \n                                and help comb through errors and bugs.\n                                <br />\n                                -> To view Google Chrome Dev Tools click F12 while in google chrome or rightclick the page and select \"Inspect Element.\"\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row text-left my-5\">\n                        <div className=\"special-heading\">\n                            <h2>References</h2>\n                        </div>\n                        <div className=\"col\">\n                            <p className=\"pt-3\">\n                                <a href=\"https://www.w3schools.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>W3Schools</strong></a>: Great reference to learn and study up on HTML &amp; CSS.\n                            </p>\n                            <p className=\"pt-1\">\n                                <a href=\"https://fontawesome.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>FontAwesome</strong></a>: All our icons we use on the iCan are from fontawesome. \n                            </p>\n                            <p className=\"pt-1\">\n                                <a href=\"http://test.website.pscu.org/brandStylingGuide/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>BrandStylingGuide</strong></a>: A guideline to what we can and cannot use throughout our web presences. \n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToolingPage;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\nimport { elastic as Menu } from 'react-burger-menu'\n\nimport HomePage from './Pages/home';\nimport HTMLPage from './Pages/HTML';\nimport CSSPage from './Pages/CSS';\nimport ToolingPage from './Pages/Tooling'\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"wrapper\" id=\"outer-wrapper\">\n        <Menu pageWrapId={\"page-wrap\"} outerContainerId={\"outer-wrapper\"} width={'250px'}>\n          <NavLink exact className=\"menu-item\" activeClassName='active' to=\"/\">Home</NavLink >\n          <NavLink exact className=\"menu-item\" activeClassName='active' to=\"/HTML\">HTML</NavLink >\n          <NavLink exact className=\"menu-item\" activeClassName='active' to=\"/CSS\">CSS</NavLink >\n          <NavLink exact className=\"menu-item\" activeClassName='active' to=\"/Tooling\">Tooling</NavLink >\n        </Menu>\n        <main id=\"page-wrap\">\n          <div className=\"container pt-5\">\n            <div className=\"row titleRow\">\n              <div className=\"col text-center\">\n                <h1>HTML/CSS Reference Guide</h1>\n              </div>\n            </div>\n            <div className=\"row text-center\">\n              <Switch>\n                <Route path=\"/HTML\">\n                  <HTMLPage />\n                </Route>\n                <Route path=\"/CSS\">\n                  <CSSPage />\n                </Route>\n                <Route path=\"/Tooling\">\n                  <ToolingPage />\n                </Route>\n                <Route path=\"/\">\n                  <HomePage />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App />, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}